name: MAUI-iOS-ipa-build

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'MauiApp12.csproj'
  XCODE_VERSION: '16.1.0'  # 指定需要的Xcode版本
# │ 0       │ '16.2.0' │ '16C5032a'  │ 'GM'        │ true   │ '/Applications/Xcode_16.2.app'   │
# │ 1       │ '16.1.0' │ '16B40'     │ 'GM'        │ true   │ '/Applications/Xcode_16.1.app'   │
# │ 2       │ '15.4.0' │ '15F31d'    │ 'GM'        │ true   │ '/Applications/Xcode_15.4.app'   │
# │ 3       │ '15.3.0' │ '15E204a'   │ 'GM'        │ true   │ '/Applications/Xcode_15.3.app'   │
# │ 4       │ '15.2.0' │ '15C500b'   │ 'GM'        │ true   │ '/Applications/Xcode_15.2.app'   │
# │ 5       │ '15.1.0' │ '15C65'     │ 'GM'        │ true   │ '/Applications/Xcode_15.1.app'   │
# │ 6       │ '15.0.1' │ '15A507'    │ 'GM'        │ true   │ '/Applications/Xcode_15.0.1.app' │
jobs:
  build-ios:
    name: 🎉 MAUI iOS Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      # 设置正确的Xcode版本
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      # 设置.NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # 安装MAUI工作负载
      - name: Install MAUI workloads
        run: |
          dotnet workload install maui
          dotnet workload install maui-ios

      # 恢复项目依赖
      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}


      # 构建IPA文件
      - name: Build IPA
        run: |
          dotnet publish ${{ env.PROJECT_PATH }} \
            -f net8.0-ios \
            -c Debug \
            -p:BuildIpa=true \
            -p:ArchiveOnBuild=true \
            -p:EnableCodeSigning=false

      # 准备Payload目录
      - name: Prepare Payload directory
        run: |
          mkdir -p Payload
          cp -r bin/Debug/net8.0-ios/ios-arm64/publish/MauiApp12.app Payload/
        working-directory: ${{ github.workspace }}

      # 使用ldid进行随机签名
      - name: Random signing with ldid
        run: |
          if command -v ldid &> /dev/null; then
            echo "Applying random signing with ldid..."
            ldid -S -M Payload/MauiApp12.app/MauiApp12
            echo "Random signing completed"
          else
            echo "ldid not available, skipping random signing"
          fi

      # 准备IPA文件
      - name: Prepare IPA
        run: |
          mv bin/Debug/net8.0-ios/ios-arm64/publish/*.ipa MAUIApp_Unsigned.ipa
        working-directory: ${{ github.workspace }}

        # 上传未签名的 IPA 文件到 Release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/MAUIApp_Unsigned.ipa
          tag: v1.0
          overwrite: true
          body: "This is first release"